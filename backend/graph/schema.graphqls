scalar DateTime

type User {
  user_id: ID!
  username: String!
  email: String!
  created_at: DateTime!
  sentMessages: [Message!]!
  receivedMessages: [Message!]!
}

type Message {
  message_id: ID!
  sender: User!
  receiver: User!
  message_body: String!
  sent_at: DateTime!
}

type Query {
  getUser(user_id: ID!): User
  listUsers: [User!]!

  getMessage(message_id: ID!): Message
  listMessages: [Message!]!
  getMessagesBetweenUsers(sender_id: ID!, receiver_id: ID!): [Message!]!
}

type Mutation {
  createUser(username: String!, email: String!, password: String!): User!
  updateUser(user_id: ID!, username: String, email: String, password: String): User!
  deleteUser(user_id: ID!): Boolean!
  
  sendMessage(sender_id: ID!, receiver_id: ID!, message_body: String!): Message!
  deleteMessage(message_id: ID!): Boolean!
}